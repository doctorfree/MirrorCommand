#!/bin/bash
# preinst script for mirrorcommand
#
# see: dh_installdeb(1)

set -e

case "$1" in
    install|upgrade)
        MMHOME="/home/pi/MagicMirror"
        USER=
        GROUP=
        [ -d ${MMHOME}/config ] || {
            MMHOME=
            for homedir in /usr/local /home/*
            do
                [ "${homedir}" == "/home/*" ] && continue
                [ -d ${homedir}/MagicMirror/config ] && {
                    MMHOME="${homedir}/MagicMirror"
                    break
                }
            done
        }
        [ "${MMHOME}" ] || {
            echo ""
            echo "Unable to locate a MagicMirror installation on this system."
            echo "MagicMirror is required in order to install MirrorCommand."
            echo ""
            while true
            do
              read -p "Install MagicMirror ? ('Y'/'N'): " yn
              case $yn in
                  [Yy]*)
                      numusers=0
                      users=
                      for user in /home/*
                      do
                          [ "${user}" == "/home/*" ] && continue
                          [ -d ${user} ] && {
                              USER=`basename ${user}`
                              users="${users} ${USER}"
                              numusers=`expr ${numusers} + 1`
                          }
                      done
                      [ $numusers -gt 1 ] && {
                          echo ""
                          # Create a selection dialog to allow user to select USER
                          PS3="${BOLD}Please enter MagicMirror user (numeric or text): ${NORMAL}"
                          options=(${users})
                          select opt in "${options[@]}"
                          do
                            case "$opt,$REPLY" in
                              *)
                                  [ -d /home/${opt} ] && {
                                      USER="${opt}"
                                      break
                                  }
                                  printf "\nInvalid entry. Please try again"
                                  printf "\nEnter either a number or text of one of the menu entries\n"
                                  ;;
                            esac
                          done
                      }
                      [ "${USER}" ] || {
                          echo "No MagicMirror user found or selected. Using root."
                          USER="root"
                      }
                      [ -d /usr/local ] || mkdir /usr/local
                      cd /usr/local
                      git clone https://github.com/MagicMirrorOrg/MagicMirror > /dev/null
                      GROUP=`id -g -n ${USER}`
                      chown -R ${USER}:${GROUP} MagicMirror
                      cd MagicMirror
                      MMHOME="/usr/local/MagicMirror"
                      echo "Installing MagicMirror in /usr/local/MagicMirror"
                      sudo -u ${USER} npm install > /dev/null 2>&1
                      # sudo -u ${USER} cp config/config.js.sample config/config.js
                      break
                      ;;
                  [Nn]*)
                      exit 1
                      ;;
                  * )
                      echo "Please answer yes or no."
                      ;;
              esac
            done
        }
        MSO="${MMHOME}/.mirrorscreen"
        [ -f ${MSO} ] || {
          touch ${MSO}
          echo ""
          echo "Portrait mode display screens are taller than wide."
          echo "Landscape mode display screens are wider than tall."
          numscreens=`xrandr --listactivemonitors | grep Monitors: | awk ' { print $2 } '`
          screens=1
          while read screeninfo
          do
            # Create a selection dialog to allow user to select screen orientation
            if [ ${numscreens} -gt 1 ]
            then
              if [ ${screens} -eq 1 ]
              then
                PS3="${BOLD}Please enter your primary display screen's orientation (numeric or text): ${NORMAL}"
              else
                PS3="${BOLD}Please enter your secondary display screen's orientation (numeric or text): ${NORMAL}"
              fi
            else
              PS3="${BOLD}Please enter your display screen's orientation (numeric or text): ${NORMAL}"
            fi
            options=(Portrait Landscape Unknown)
            select opt in "${options[@]}"
            do
              case "$opt,$REPLY" in
                "Portrait",*|*,"Portrait"|"portrait",*|*,"portrait")
                  echo "Using portrait display mode"
                  echo "PORTRAIT_${screens}=1" >> ${MSO}
                  break
                  ;;
                "Landscape",*|*,"Landscape"|"landscape",*|*,"landscape")
                  echo "Using landscape display mode"
                  echo "PORTRAIT_${screens}=" >> ${MSO}
                  break
                  ;;
                "Unknown",*|*,"Unknown"|"unknown",*|*,"unknown")
                  echo "Using landscape display mode"
                  echo "PORTRAIT_${screens}=" >> ${MSO}
                  break
                  ;;
                *)
                  printf "\nInvalid entry. Please try again"
                  printf "\nEnter either a number or text of one of the menu entries\n"
                  ;;
              esac
            done
            ((screens+=1))
          done < `xrandr --listactivemonitors | grep 0:`
        }
        echo "Setting ownership of MirrorCommand screen mode configuration file"
        [ -f ${MSO} ] && {
          [ "${USER}" ] || {
            USER=$(stat -c '%U' ${MMHOME}/config)
          }
          [ "${GROUP}" ] || {
            GROUP=`id -g -n ${USER}`
          }
          chown ${USER}:${GROUP} ${MSO}
        }
        echo "MirrorCommand pre-installation configuration complete"
    ;;

    *)
    ;;
esac

exit 0

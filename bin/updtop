#!/bin/bash

MNT_PT="/mnt/transcend/Pictures"
TOP_DIR="${MNT_PT}/MagicMirror"
RMLIST="/usr/local/MirrorCommand/etc/rmlist.txt"

[ -d ${TOP_DIR} ] || {
    MNT_PT="/u/pictures"
    TOP_DIR="${MNT_PT}/MagicMirror"
    [ -d ${TOP_DIR} ] || {
        MNT_PT="/v/pictures"
        TOP_DIR="${MNT_PT}/MagicMirror"
        [ -d ${TOP_DIR} ] || {
            echo "$TOP_DIR does not exist or is not a directory. Exiting."
            exit 1
        }
    }
}

TOP="${MNT_PT}/Wallhaven"
cd ${TOP_DIR}

isportrait() {
    port=0
    #GEO=`identify "$1" | awk ' { print $(NF-6) } '`
    GEO=`identify "$1" | awk ' { print $3 } '`
    W=`echo $GEO | awk -F "x" ' { print $1 } '`
    # Check if width not greater than minwid
    [ "$W" ] && [ $W -gt ${minwid} ] || {
        port=1
        return $port
    }
    H=`echo $GEO | awk -F "x" ' { print $2 } '`
    # Check if height not greater than minhei
    [ "$H" ] && [ $H -gt ${minhei} ] || {
        port=1
        return $port
    }
    # Check if width less than height
    [ "$W" ] && [ "$H" ] && [ $W -lt $H ] || {
        port=1
        return $port
    }
    return $port
}

portrait=1
orient="portrait"
minwid=800
minhei=1000
[ "$1" == "-l" ] && {
    portrait=
    orient="landscape"
    minhei=800
    minwid=1000
    shift
}

[ "$1" ] || {
    echo "Use 'mmupdall' to update all folders."
    echo "This script requires a folder or folders as arguments."
    echo "Exiting."
    exit 1
}

cd ${TOP_DIR}/${orient}
for folder in $*
do
    [ "$folder" == "*" ] && continue
    [ "$folder" == "Unused" ] && continue
    [ -d $folder ] || continue
    cd $folder
    for img in *
    do
        [ "$img" == "*" ] && continue
        if [ -d "$img" ]
        then
            for subimg in $img/*
            do
                [ "$subimg" == "$img/*" ] && continue
                [ -L $subimg ] && rm -f $subimg
                grep $subimg $RMLIST > /dev/null && {
                    rm -f $subimg
                    continue
                }
                [ -f ${TOP}/$folder/$subimg ] && {
                    rm -f $subimg
                    cp ${TOP}/$folder/$subimg $subimg
                    break
                }
              done
        else
            [ -L $img ] && rm -f $img
            grep $img $RMLIST > /dev/null && {
                rm -f $img
                continue
            }
            [ -f ${TOP}/$folder/$img ] && {
                rm -f $img
                cp ${TOP}/$folder/$img .
                break
            }
        fi
    done
    cd ${TOP_DIR}/${orient}
done

# Identify any newly added files and copy them
for folder in $*
do
    [ "$folder" == "*" ] && continue
    [ "$folder" == "Unused" ] && continue
    [ -d $folder ] || continue
    chkfolder=$folder
    [ -d ${TOP}/$chkfolder ] && {
        echo "Checking ${TOP}/$chkfolder for newly added files"
        cd ${TOP}/$chkfolder
        for img in *
        do
            [ "$img" == "*" ] && continue
            [ "$img" == "downloaded.txt" ] && continue
            [ "$img" == "SUMS.txt" ] && continue
            [ "$img" == "Description.txt" ] && continue
            if [ -d "$img" ]
            then
                [ -d ${TOP_DIR}/${orient}/$folder/$img ] || mkdir -p ${TOP_DIR}/${orient}/$folder/$img
                for subimg in $img/*
                do
                    [ "$subimg" == "$img/*" ] && continue
                    [ -L ${TOP_DIR}/${orient}/$folder/$subimg ] && rm -f ${TOP_DIR}/${orient}/$folder/$subimg
                    grep $subimg $RMLIST > /dev/null && {
                        rm -f $subimg
                        continue
                    }
                    if isportrait $subimg
                    then
                      [ "${portrait}" ] && {
                        cp ${TOP}/$chkfolder/$subimg ${TOP_DIR}/${orient}/$folder/$subimg
                      }
                    else
                      [ "${portrait}" ] || {
                        cp ${TOP}/$chkfolder/$subimg ${TOP_DIR}/${orient}/$folder/$subimg
                      }
                    fi
                done
            else
                [ -L ${TOP_DIR}/${orient}/$folder/$img ] && rm -f ${TOP_DIR}/${orient}/$folder/$img
                grep $img $RMLIST > /dev/null && {
                    rm -f $img
                    continue
                }
                if isportrait $img
                then
                  [ "${portrait}" ] && {
                    cp ${TOP}/$chkfolder/$img ${TOP_DIR}/${orient}/$folder/$img
                  }
                else
                  [ "${portrait}" ] || {
                    cp ${TOP}/$chkfolder/$img ${TOP_DIR}/${orient}/$folder/$img
                  }
                fi
            fi
        done
        cd ${TOP_DIR}/${orient}
    }
    cd ${TOP_DIR}/${orient}
done

#!/bin/bash

IDS="1WNkq7451G4aETO_IvB6J7KgOLk4LQKWE \
     1UnfpRUFjxO8-aWBIoadc97JS2VepEPhO \
     1SoiAmVdwVHx-ltti7kqQHM-R-cCjtJz8 \
     10GDkDVOxZtYKZtaKIn6C-xe4pab4R4cT \
     10DyV09WNLMcf5PET0gxwTtaaWzZnm7Mv"

# Placeholder, replace with landscape archive IDs
LAND_IDS="1NFPJPT965E0kIhnzYW77VywLpockkyR1 \
          1aL96AZzLNeJ4Lz9ndQFQTpCSum05HzUS \
          1S_8_hIC6J3Km9QSIP6OleacKu3qUt4G1 \
          10GDkDVOxZtYKZtaKIn6C-xe4pab4R4cT \
          10DyV09WNLMcf5PET0gxwTtaaWzZnm7Mv"

PICDIR="pics-portrait"
SPACE="375M"
[ "$1" == "-l" ] && {
  IDS=${LAND_IDS}
  PICDIR="pics-landscape"
  SPACE="375M"
}

HERE=`pwd`
NUM_IDS=`echo ${IDS} | wc -w`
printf "\nDownloading and extracting ${NUM_IDS} image archives "
printf "will consume approximately ${SPACE} of disk space in "
printf "${HERE}\n\n"

while true
do
  read -p "Do you wish to continue ? ('Y'/'N'): " yn
  case $yn in
      [Yy]*)
          DOWNLOAD=1
          break
          ;;
      [Nn]*)
          DOWNLOAD=
          break
          ;;
      * )
          echo "Please answer yes or no."
          ;;
  esac
done

[ "${DOWNLOAD}" ] && {
  gdinst=`type -p gdown`

  [ "${gdinst}" ] || pip install gdown > /dev/null

  i=1
  for ID in ${IDS}
  do
    printf "\nDownloading and extracting ${i}/${NUM_IDS} image archives ..."
    gdown -O - --id ${ID} --quiet | tar xzf -
    printf " Done."
    ((i++))
  done
  printf "\n"
  MMHOME=${HOME}/MagicMirror
  [ -d ${MMHOME}/config ] || {
      MMHOME=
      for homedir in /usr/local /home/*
      do
          [ "${homedir}" == "/home/*" ] && continue
          [ -d ${homedir}/MagicMirror/config ] && {
              MMHOME="${homedir}/MagicMirror"
              break
          }
      done
  }
  [ "${MMHOME}" ] && {
      MM="/usr/local/MirrorCommand"
      USER=$(stat -c '%U' ${MMHOME}/config)
      GROUP=$(stat -c '%G' ${MMHOME}/config)
      sudo chown -R ${USER}:${GROUP} ${MM}/${PICDIR}
      find ${MM}/${PICDIR} -type d -print0 | xargs -0 chmod 755
      find ${MM}/${PICDIR} -type f -print0 | xargs -0 chmod 644
  }
}


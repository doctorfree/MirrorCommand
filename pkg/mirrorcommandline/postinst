#!/bin/bash
# postinst script for mirrorcommandline
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
        export PATH=/usr/local/bin:$PATH
        [ -d /usr/local ] || mkdir /usr/local
        [ -d /usr/local/bin ] || mkdir /usr/local/bin
        cd /usr/local/bin
        MM="/usr/local/MagicMirror"
        for command in ${MM}/bin/*
        do
            [ "${command}" == "${MM}/bin/*" ] && continue
            b=`basename ${command}`
            [ -f $b ] || ln -s ${command} .
        done
        MMHOME=/home/pi/MagicMirror
        [ -d ${MMHOME}/config ] || {
            MMHOME=
            for homedir in /home/*
            do
                [ "${homedir}" == "/home/*" ] && continue
                [ -d ${homedir}/MagicMirror/config ] && {
                    MMHOME="${homedir}/MagicMirror"
                    break
                }
            done
        }
        if [ "${MMHOME}" ]
        then
            cd "${MMHOME}/config"
            USER=$(stat -c '%U' ${MMHOME}/config)
            GROUP=$(stat -c '%G' ${MMHOME}/config)
            chown -R ${USER}:${GROUP} ${MM}
            for config in ${MM}/config/*
            do
                [ "${config}" == "${MM}/config/*" ] && continue
                b=`basename ${config}`
                [ -f $b ] || [ -d $b ] || sudo -u ${USER} ln -s ${config} .
            done
            [ -d "${MMHOME}/css" ] && {
              cd "${MMHOME}/css"
              for css in ${MM}/css/*
              do
                [ "${css}" == "${MM}/css/*" ] && continue
                b=`basename ${css}`
                if [ "$b" == "custom.css" ]
                then
                    if [ -f $b ]
                    then
                        [ -f custom-mirrorcommandline.css ] || {
                            sudo -u ${USER} ln -s ${css} custom-mirrorcommandline.css
                        }
                    else
                        sudo -u ${USER} ln -s ${css} .
                    fi
                else
                    [ -f $b ] || [ -d $b ] || sudo -u ${USER} ln -s ${css} .
                fi
              done
            }
        else
            echo "Unable to locate MagicMirror installation folder."
            echo "MirrorCommandLine config and css files in ${MM}"
            echo "have not been linked into the MagicMirror installation folder."
            echo "This must be accomplished manually."
        fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

exit 0

#!/bin/bash
# postinst script for mirrorcommandline
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
        export PATH=/usr/local/bin:$PATH
        # Scripts for which links will be made in /usr/local/bin
        EXPORTS="backgrounds camsnap chkconfig chktemp cron.bash gethue getquote \
            get_temps gitdiff mirror mknewartist mknewmodel mknewphotographer \
            mknewplayboy mknewtop mm mmapiactions mmgetb mmscene mmsetb mmupdall \
            pcmanslideshow play rand_back rmlandscape sdbackup \
            sderase sdrestore sdwrite send_sms showkeys updallartists \
            updallmodels updallphotographers updalltop updarpscan updartist updgit \
            updlinks updmodel updphotographer updtop vncview vol wireless_conf zerologs"
        LOCAL="myreboot myshutdown remountusb mirror_start"

        [ -d /usr/local ] || mkdir /usr/local
        [ -d /usr/local/bin ] || mkdir /usr/local/bin
        cd /usr/local/bin
        MM="/usr/local/MagicMirror"
        for command in ${EXPORTS}
        do
          [ -f ${MM}/bin/${command} ] && {
            [ -f ${command} ] || ln -s ${MM}/bin/${command} .
          }
        done
        for command in ${LOCAL}
        do
          [ -f ${MM}/bin/${command} ] && {
            [ -f /usr/bin/${command} ] || {
              cp ${MM}/bin/${command} /usr/bin/${command}
              chmod 755 /usr/bin/${command}
            }
            if [ "${command}" == "remountusb" ] || [ "${command}" == "mirror_start" ]
            then
              [ -f ${command} ] || ln -s /usr/bin/${command} .
            else
              localcomm=`echo ${command} | sed -e "s/my//"`
              [ -f ${localcomm} ] || ln -s /usr/bin/${command} ${localcomm}
            fi
          }
        done
        MMHOME=/home/pi/MagicMirror
        [ -d ${MMHOME}/config ] || {
            MMHOME=
            for homedir in /home/*
            do
                [ "${homedir}" == "/home/*" ] && continue
                [ -d ${homedir}/MagicMirror/config ] && {
                    MMHOME="${homedir}/MagicMirror"
                    break
                }
            done
        }
        if [ "${MMHOME}" ]
        then
            USER=$(stat -c '%U' ${MMHOME}/config)
            GROUP=$(stat -c '%G' ${MMHOME}/config)
            chown -R ${USER}:${GROUP} ${MM}
            [ -d "${MMHOME}/config" ] || {
                sudo -u ${USER} mkdir "${MMHOME}/config"
            }
            cd "${MMHOME}/config"
            for config in ${MM}/config/*
            do
              [ "${config}" == "${MM}/config/*" ] && continue
              b=`basename ${config}`
              [ -d ${config} ] && {
                  [ -d $b ] || sudo -u ${USER} mkdir $b
                  cd $b
                  for subconf in ${config}/*
                  do
                    [ "${subconf}" == "${config}/*" ] && continue
                    c=`basename ${subconf}`
                    [ -f $c ] || sudo -u ${USER} cp ${subconf} .
                  done
                  cd ..
                  continue
              }
              [ -f $b ] || sudo -u ${USER} cp ${config} .
            done
            [ -d "${MMHOME}/css" ] && {
              cd "${MMHOME}/css"
              for css in ${MM}/css/*
              do
                [ "${css}" == "${MM}/css/*" ] && continue
                b=`basename ${css}`
                if [ "$b" == "custom.css" ]
                then
                    if [ -f $b ]
                    then
                        [ -f custom-mirrorcommandline.css ] || {
                            sudo -u ${USER} cp ${css} custom-mirrorcommandline.css
                        }
                    else
                        sudo -u ${USER} cp ${css} .
                    fi
                else
                    [ -f $b ] || [ -d $b ] || sudo -u ${USER} cp ${css} .
                fi
              done
            }
        else
            echo "Unable to locate MagicMirror installation folder."
            echo "MirrorCommandLine config and css files in ${MM}"
            echo "have not been linked into the MagicMirror installation folder."
            echo "This must be accomplished manually."
        fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

exit 0

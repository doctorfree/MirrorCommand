#!/bin/bash
# prerm script for mirrorcommandline
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <prerm> `remove'
#        * <old-prerm> `upgrade' <new-version>
#        * <new-prerm> `failed-upgrade' <old-version>
#        * <conflictor's-prerm> `remove' `in-favour' <package> <new-version>
#        * <deconfigured's-prerm> `deconfigure' `in-favour'
#          <package-being-installed> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    remove|upgrade|deconfigure)
        MM="/usr/local/MagicMirror"
        [ -d /usr/local/bin ] && {
            cd /usr/local/bin
            for command in ${MM}/bin/*
            do
                [ "${command}" == "${MM}/bin/*" ] && continue
                b=`basename ${command}`
                [ -L $b ] && {
                    readlink $b | grep ${MM} > /dev/null && rm -f $b
                }
            done
        }
        MMHOME=/home/pi/MagicMirror
        [ -d ${MMHOME}/config ] || {
            MMHOME=
            for homedir in /home/*
            do
                [ "${homedir}" == "/home/*" ] && continue
                [ -d ${homedir}/MagicMirror/config ] && {
                    MMHOME="${homedir}/MagicMirror"
                    break
                }
            done
        }
        if [ "${MMHOME}" ]
        then
            for confdir in config .config-nokey
            do
              [ -d "${MMHOME}/${confdir}" ] || continue
              cd "${MMHOME}/${confdir}"
              for config in ${MM}/${confdir}/*
              do
                [ "${config}" == "${MM}/${confdir}/*" ] && continue
                b=`basename ${config}`
                # [ -L $b ] && {
                #     readlink $b | grep ${MM} > /dev/null && rm -f $b
                # }
                [ -d $b ] && {
                    cd $b
                    for subconf in ${MM}/${confdir}/$b/*
                    do
                        [ "${subconf}" == "${MM}/${confdir}/$b/*" ] && continue
                        c=`basename ${subconf}`
                        diff ${subconf} $c > /dev/null && rm -f $c
                    done
                    cd ..
                }
                [ -f $b ] && {
                    diff ${config} $b > /dev/null && rm -f $b
                }
              done
            done
            [ -d "${MMHOME}/css" ] && {
              cd "${MMHOME}/css"
              for css in ${MM}/css/*
              do
                [ "${css}" == "${MM}/css/*" ] && continue
                b=`basename ${css}`
                [ -L $b ] && {
                    readlink $b | grep ${MM} > /dev/null && rm -f $b
                }
                c="custom-mirrorcommandline.css"
                [ -L $c ] && {
                    readlink $c | grep ${MM} > /dev/null && rm -f $c
                }
              done
            }
        else
            echo "Unable to locate MagicMirror installation folder."
            echo "MirrorCommandLine config and css files in ${MM}"
            echo "have not been unlinked in the MagicMirror installation folder."
            echo "This must be accomplished manually."
        fi
    ;;

    failed-upgrade)
    ;;

    *)
        echo "prerm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

exit 0

#!/bin/bash
# prerm script for mirrorcommandline
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <prerm> `remove'
#        * <old-prerm> `upgrade' <new-version>
#        * <new-prerm> `failed-upgrade' <old-version>
#        * <conflictor's-prerm> `remove' `in-favour' <package> <new-version>
#        * <deconfigured's-prerm> `deconfigure' `in-favour'
#          <package-being-installed> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    remove|upgrade|deconfigure)
        MM="/usr/local/MagicMirror"
        MMHOME=/home/pi/MagicMirror
        [ -d ${MMHOME}/config ] || {
            MMHOME=
            for homedir in /home/*
            do
                [ "${homedir}" == "/home/*" ] && continue
                [ -d ${homedir}/MagicMirror/config ] && {
                    MMHOME="${homedir}/MagicMirror"
                    break
                }
            done
        }
        if [ "${MMHOME}" ]
        then
            [ -d "${MMHOME}/modules/MMM-BackgroundSlideshow/pics" ] && {
              cd "${MMHOME}/modules/MMM-BackgroundSlideshow/pics"
              for img in Photographers
              do
                [ -L ${img} ] && {
                    readlink ${img} | grep ${MM} > /dev/null && rm -f ${img}
                }
              done
            }
        else
            echo "Unable to locate MagicMirror installation folder."
            echo "MirrorCommandLine config and css files in ${MM}"
            echo "have not been unlinked in the MagicMirror installation folder."
            echo "This must be accomplished manually."
        fi

        [ -d ${MM}/pics ] && {
          REMOVE=1
          while true
          do
            PS3="${BOLD}Remove previously downloaded Photographer images ? ('Y'/'N'): ${NORMAL}"
            options=("Yes" "No")
            select opt in "${options[@]}"
            do
              case "$opt,$REPLY" in
                  "Yes",*|*,"Yes"|"Y",*|*,"Y"|"y",*|*,"y")
                      break 2
                      ;;
                  "No",*|*,"No"|"N",*|*,"N"|"n",*|*,"n")
                      REMOVE=
                      break 2
                      ;;
              esac
            done
          done
          [ "${REMOVE}" ] && {
            if [ -f ${MM}/pics/photogslist.txt ]
            then
              while read img
              do
                rm -f ${MM}/pics/${img}
              done < ${MM}/pics/photogslist.txt
              rm -f ${MM}/pics/photogslist.txt
              rmdir --ignore-fail-on-non-empty ${MM}/pics/Photographers/*
              rmdir --ignore-fail-on-non-empty ${MM}/pics/Photographers
            else
              rm -rf ${MM}/pics/Photographers
            fi
          }
        }
    ;;

    failed-upgrade)
    ;;

    *)
        echo "prerm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

exit 0
